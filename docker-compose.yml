services:
  postgres:
    image: postgres:16-alpine
    container_name: cerberus-postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - cerberus-postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - cerberus-network

  api:
    build:
      context: .
      dockerfile: Cerberus/Dockerfile
    container_name: cerberus-api
    environment:
      BOOTSTRAP_TOKEN: ${BOOTSTRAP_TOKEN}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5000:8080"
      - "5001:8081"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cerberus-network

networks:
  cerberus-network:
    driver: bridge

volumes:
  cerberus-postgres-data:
    name: cerberus-postgres-data
